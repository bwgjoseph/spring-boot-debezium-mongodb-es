version: '3.9'

services:
  mongo:
    image: mongo:6.0.6
    container_name: sbd-mongo
    ports:
      - "27017:27017"
    volumes:
      - sbd_mongo_db:/data/db
      - sbd_mongo_configdb:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    restart: unless-stopped
    networks:
      - sbd_internal
    # on first `docker compose up -d`, comment out entrypoint and healthcheck
    # once started, uncomment, and run `docker compose up -d` again
    # entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "esrs" ]
    # healthcheck:
    #   test: 'test $$(mongosh --eval "rs.initiate().ok || rs.status().ok" --quiet) -eq 1'
    #   interval: 10s
    #   start_period: 30s

  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: sbd-elasticsearch
    ports:
      - "9200:9200"
    environment:
      - node.name=sbd-es01
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=password
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped
    networks:
      - sbd_internal

  kibana:
    image: kibana:8.8.0
    container_name: sbd-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_PASSWORD: password
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - sbd_internal

networks:
  sbd_internal:
    driver: 'bridge'

volumes:
  sbd_mongo_db:
  sbd_mongo_configdb: